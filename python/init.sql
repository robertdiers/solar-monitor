CREATE TABLE watts ( "time" timestamptz NOT NULL, "key" varchar NOT NULL, "value" double precision );
SELECT create_hypertable('watts', 'time');
ALTER TABLE watts SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('watts', INTERVAL '1 days');
SELECT add_retention_policy('watts', INTERVAL '7 days');
CREATE TABLE voltages ( "time" timestamptz NOT NULL, "key" varchar NOT NULL, "value" double precision );
SELECT create_hypertable('voltages', 'time');
ALTER TABLE voltages SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('voltages', INTERVAL '1 days');
SELECT add_retention_policy('voltages', INTERVAL '7 days');
CREATE TABLE temps ( "time" timestamptz NOT NULL, "key" varchar NOT NULL, "value" double precision );
SELECT create_hypertable('temps', 'time');
ALTER TABLE temps SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('temps', INTERVAL '1 days');
SELECT add_retention_policy('temps', INTERVAL '7 days');
CREATE TABLE percentages ( "time" timestamptz NOT NULL, "key" varchar NOT NULL, "value" double precision );
SELECT create_hypertable('percentages', 'time');
ALTER TABLE percentages SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('percentages', INTERVAL '1 days');
SELECT add_retention_policy('percentages', INTERVAL '7 days');
CREATE TABLE kilowatthours ( "time" timestamptz NOT NULL, "key" varchar NOT NULL, "value" double precision );
SELECT create_hypertable('kilowatthours', 'time');
ALTER TABLE kilowatthours SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('kilowatthours', INTERVAL '1 days');
SELECT add_retention_policy('kilowatthours', INTERVAL '7 days');
CREATE TABLE kilowatthours_day ( "day" date NOT NULL, "key" varchar NOT NULL, "value" double precision );
CREATE UNIQUE INDEX kilowatthours_day_idx on kilowatthours_day ("day", "key");
CREATE INDEX kilowatthours_day_idx1 ON kilowatthours_day ("day");
CREATE INDEX kilowatthours_day_idx2 ON kilowatthours_day ("key");
CREATE OR REPLACE VIEW public.v_kwh_day AS SELECT key, to_char("day", 'YYYY') || '-' || to_char("day", 'MM') || '-' || to_char("day", 'DD') AS "day", "value" as "value" FROM kilowatthours_day WHERE key not like 'shelly%' UNION ALL SELECT 'solax', to_char("day",'YYYY') || '-' || to_char("day",'MM') || '-' || to_char("day",'DD') AS "day", sum("value") as "value" FROM kilowatthours_day WHERE key like 'shelly%' GROUP BY "day" ORDER BY 2 desc, 1;
CREATE OR REPLACE VIEW public.v_kwh_month AS SELECT key, EXTRACT(year FROM day) AS year, EXTRACT(month FROM day) AS month, sum(value) AS value FROM kilowatthours_day WHERE key not like 'shelly%' GROUP BY key, (EXTRACT(year FROM day)), (EXTRACT(month FROM day)) UNION ALL SELECT 'solax', EXTRACT(year FROM day) AS year, EXTRACT(month FROM day) AS month, sum(value) AS value FROM kilowatthours_day WHERE key like 'shelly%' GROUP BY (EXTRACT(year FROM day)), (EXTRACT(month FROM day)) ORDER BY 2 DESC, 3 DESC, 1;
CREATE OR REPLACE VIEW public.v_kwh_year AS SELECT key, EXTRACT(year FROM day) AS year, sum(value) AS value FROM kilowatthours_day WHERE key not like 'shelly%' GROUP BY key, (EXTRACT(year FROM day)) UNION ALL SELECT 'solax', EXTRACT(year FROM day) AS year, sum(value) AS value FROM kilowatthours_day WHERE key like 'shelly%' GROUP BY (EXTRACT(year FROM day)) ORDER BY 2 DESC, 1;
CREATE TABLE kilowatthours_day_counter ( "day" date NOT NULL, "key" varchar NOT NULL, "value" double precision );
CREATE UNIQUE INDEX kilowatthours_day_counter_idx on kilowatthours_day_counter ("day", "key");
